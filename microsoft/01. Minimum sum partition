class Solution{

  public:
  
    int subsetSum(int arr[],int n,int sum,vector<vector<int>> &dp){
        
        if(dp[n][sum] != -1)return dp[n][sum];
        
        if(n == 0)return dp[n][sum] = 0;
        if(sum <= 0)return dp[n][sum] = 0;
        
        if(arr[n-1] > sum){
            return dp[n][sum] = subsetSum(arr,n-1,sum,dp);
        }else{
            return dp[n][sum] = max(subsetSum(arr,n-1,sum,dp), arr[n-1] + subsetSum(arr,n-1,sum - arr[n-1],dp));
        }
    }
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int total = 0;
	    for(int i = 0; i < n;i++)total += arr[i];
	    
	    vector<vector<int>> dp(n+1 , vector<int>(total+1 , -1));
	    int res = subsetSum(arr,n,total/2,dp);
	    return abs(res - abs(total - res));
	} 
};
