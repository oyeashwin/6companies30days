class Solution{
public:
    
    
    bool subsetSum(int arr[],int n,int sum,vector<vector<int>> &dp){
        
        if(dp[n][sum] != -1)return dp[n][sum];
        
        if(n==0)return dp[n][sum] = 0;
        if(sum == 0)return dp[n][sum] = 1;
        
        if(sum < arr[n-1]){
            return dp[n][sum] = subsetSum(arr,n-1,sum,dp);
        }else{
            return dp[n][sum] = (subsetSum(arr,n-1,sum,dp) || subsetSum(arr,n-1,sum-arr[n-1],dp));
        }
    }
    
    int equalPartition(int N, int arr[])
    {
        // code here
        vector<vector<int>>dp(101, vector<int>(50001 , -1));
        int sum = 0;
        for(int i = 0; i < N;i++)sum += arr[i];
        if(sum&1)return 0;
        return subsetSum(arr,N,sum/2,dp);
    }
};
