class Solution {
public:
    int minSwaps(vector<vector<int>>& grid) {
        int n = grid.size();
        map<vector<int>,int>mp;
        for(int i = 0 ;i < n;i++){
            int cnt = 0;
            for(int j = n-1;j >= 0;j--){
                if(grid[i][j] == 0)cnt++;
                else break;
            }
            mp[grid[i]] = cnt;
        }
        int swaps = 0;
        for(int i = 0 ;i < n;i++){
            int min_val = n-1-i;
            if(mp[grid[i]] >= min_val)continue;
            int flag = 0;
            for(int j = i+1; j < n;j++){
                if(mp[grid[j]] >= min_val){
                    swaps += j-i;
                    vector<int>v = grid[j];
                    grid.erase(grid.begin() + j);
                    grid.insert(grid.begin() + i,v);
                    flag = 1;
                    break;
                }
            }
            if(flag == 0)return -1;
        }
        return swaps;
    }
};
